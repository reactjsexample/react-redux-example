{"version":3,"sources":["assets/styles/XxxSharedStyles.module.scss","components/XxxHeader/XxxHeader.module.scss","pages/XxxQuestionsPage/XxxQuestionsPage.module.scss","XxxApp/XxxApp.module.scss","pages/XxxAnswersPage/XxxAnswersPage.module.scss","assets/images/redux-logo-white.svg","components/XxxSearchBox/XxxSearchBox.module.scss","pages/XxxAnswersPage/XxxAnswersPageReducer.js","pages/XxxAnswersPage/XxxAnswersPageActions.js","pages/XxxAnswersPage/XxxAnswersPageActionTypes.js","pages/XxxAnswersPage/XxxAnswersPage.jsx","components/XxxSearchBox/XxxSearchBoxReducer.js","components/XxxSearchBox/XxxSearchBox.jsx","components/XxxSearchBox/xxxSearchBoxActions.js","components/XxxSearchBox/XxxSearchBoxActionTypes.js","components/XxxHeader/XxxHeader.jsx","pages/XxxHomePage/XxxHomePage.jsx","pages/XxxPageNotFoundPage/XxxPageNotFoundPage.jsx","pages/XxxQuestionsPage/XxxQuestionsPageReducer.js","pages/XxxQuestionsPage/XxxQuestionsPageActions.js","pages/XxxQuestionsPage/XxxQuestionsPageActionTypes.js","pages/XxxQuestionsPage/XxxQuestionsPage.jsx","XxxApp/XxxApp.js","XxxApp/xxxAppReducer.js","XxxApp/xxxAppStore.js","index.js"],"names":["module","exports","initialState","answers","isEmpty","isError","isLoading","question","selectAnswers","state","answersPage","selectIsEmpty","selectIsError","selectIsLoading","selectIsQuestions","questionsPage","isQuestions","selectQuestion","fetchAnswers","type","fetchAnswersFailure","fetchAnswersSuccess","data","payload","fetchQuestion","fetchQuestionFailure","fetchQuestionSuccess","XxxAnswersPage","questionId","requestUrl","requestParams","this","getQuestionId","getQuestion","unlisten","props","history","listen","match","params","id","setState","key","site","filter","order","sort","url","getQueryString","getQuestionFromUrl","getAnswers","getAnswersFromUrl","Object","keys","map","encodeURIComponent","join","text","undefined","newText","DOMParser","parseFromString","documentElement","textContent","replace","time","Date","toLocaleDateString","year","month","day","pageView","className","sharedStyles","pageMessageContainer","CircularProgress","pageMessageError","pageMessageWarning","styles","answersContainer","answerQuestionContainer","questionTitle","decodeHtmlEntities","title","questionCaption","questionInfo","view_count","score","tags","timeToShortDate","creation_date","questionBody","dangerouslySetInnerHTML","__html","body","item","is_accepted","answerAccepted","answerNotAccepted","answer_id","answerCaption","answerInfo","answerBody","page","pageTitle","mainCard","Component","mapDispatchToProps","dispatch","a","fetch","response","ok","json","connect","isSearchDisabled","previousSearchText","searchText","selectIsSearchDisabled","searchBox","selectPreviousSearchText","selectSearchText","XxxSearchBox","handleChange","bind","handleSubmit","event","setSearchText","target","value","setTimeout","setIsSearchDisabled","length","preventDefault","setPreviousSearchText","push","pathname","search","onSubmit","autoFocus","onChange","IconButton","aria-label","disabled","color","href","onClick","withRouter","XxxHeader","header","src","reduxLogoWhite","logo","alt","headerTitle","searchBoxContainer","XxxHomePage","XxxPageNotFoundPage","currentPage","isMore","questions","selectCurrentPage","selectIsMore","selectQuestions","fetchQuestions","fetchQuestionsFailure","fetchQuestionsSuccess","XxxQuestionsPage","pageBaseUrl","requestedPage","handleFirstPage","handleNextPage","handlePreviousPage","readUrlQueryString","location","getQuestions","values","queryString","parse","baseUrl","setCurrentPage","getQuestionsFromUrl","navigateToPage","parseInt","toString","queryParams","question_id","process","dummy","pageFooter","pageNavigationPanel","XxxApp","xxxApp","exact","path","component","xxxAppReducer","combineReducers","action","hasOwnProperty","Array","isArray","items","has_more","xxxAppStore","createStore","composeWithDevTools","applyMiddleware","thunk","rootElement","document","getElementById","ReactDOM","render","store"],"mappings":"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","file":"static/js/main.136e5435.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainCard\":\"XxxSharedStyles_mainCard__3SIRA\",\"page\":\"XxxSharedStyles_page__27M9s\",\"pageMessageError\":\"XxxSharedStyles_pageMessageError__cIUGn\",\"pageMessageContainer\":\"XxxSharedStyles_pageMessageContainer__2aGmj\",\"pageMessageWarning\":\"XxxSharedStyles_pageMessageWarning__22cCe\",\"pageTitle\":\"XxxSharedStyles_pageTitle__30m_8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"XxxHeader_header__1_1KF\",\"headerTitle\":\"XxxHeader_headerTitle__1_81R\",\"logo\":\"XxxHeader_logo__3G4XE\",\"searchBoxContainer\":\"XxxHeader_searchBoxContainer__2v2F3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageFooter\":\"XxxQuestionsPage_pageFooter__22Qw2\",\"pageNavigationPanel\":\"XxxQuestionsPage_pageNavigationPanel__1riIJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"xxxApp\":\"XxxApp_xxxApp__2JH4j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"answerAccepted\":\"XxxAnswersPage_answerAccepted__2AF2s\",\"answerCaption\":\"XxxAnswersPage_answerCaption__2Cwpr\",\"answerInfo\":\"XxxAnswersPage_answerInfo__1IlQk\",\"answerNotAccepted\":\"XxxAnswersPage_answerNotAccepted__1EpgF\",\"answerQuestionContainer\":\"XxxAnswersPage_answerQuestionContainer__3qsqw\",\"answersContainer\":\"XxxAnswersPage_answersContainer__2xGEk\",\"backToQuestions\":\"XxxAnswersPage_backToQuestions__1uUFb\",\"questionCaption\":\"XxxAnswersPage_questionCaption__2P1yB\",\"questionInfo\":\"XxxAnswersPage_questionInfo__1Ut32\",\"questionTitle\":\"XxxAnswersPage_questionTitle__1FEzL\"};","module.exports = __webpack_public_path__ + \"static/media/redux-logo-white.8c0f1253.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchBox\":\"XxxSearchBox_searchBox__3MpVo\"};","import * as actionType from \"./XxxAnswersPageActionTypes\";\n\nconst initialState = {\n  answers: [],\n  isEmpty: false,\n  isError: false,\n  isLoading: true,\n  question: {}\n};\n\nconst answersPageReducer = (state = initialState, action) => {\n  let isEmpty = false;\n  switch (action.type) {\n    case actionType.FETCH_ANSWERS:\n      return {\n        ...state,\n        answers: [],\n        isEmpty: false,\n        isError: false,\n        isLoading: true\n      };\n    case actionType.FETCH_ANSWERS_FAILURE:\n      return {\n        ...state,\n        answers: [],\n        isEmpty: false,\n        isError: true,\n        isLoading: false\n      };\n    case actionType.FETCH_ANSWERS_SUCCESS:\n      isEmpty =\n        !action.payload.data.hasOwnProperty(\"items\") ||\n        !(\n          Array.isArray(action.payload.data.items) &&\n          action.payload.data.items.length > 0\n        );\n      return {\n        ...state,\n        answers: !isEmpty ? action.payload.data.items : [],\n        isEmpty: isEmpty,\n        isError: false,\n        isLoading: false\n      };\n    case actionType.FETCH_QUESTION:\n      return {\n        ...state,\n        isEmpty: false,\n        isError: false,\n        isLoading: true,\n        isMore: false,\n        question: {}\n      };\n    case actionType.FETCH_QUESTION_FAILURE:\n      return {\n        ...state,\n        isEmpty: false,\n        isError: true,\n        isLoading: false,\n        isMore: false,\n        question: {}\n      };\n    case actionType.FETCH_QUESTION_SUCCESS:\n      isEmpty =\n        !action.payload.data.hasOwnProperty(\"items\") ||\n        !(\n          Array.isArray(action.payload.data.items) &&\n          action.payload.data.items.length > 0\n        );\n      return {\n        ...state,\n        isEmpty: isEmpty,\n        isError: false,\n        isLoading: false,\n        question: !isEmpty ? action.payload.data.items[0] : {}\n      };\n    default:\n      return state;\n  }\n};\n\nexport { answersPageReducer };\n\n// Redux selectors\nexport const selectAnswers = state => state.answersPage.answers;\nexport const selectIsEmpty = state => state.answersPage.isEmpty;\nexport const selectIsError = state => state.answersPage.isError;\nexport const selectIsLoading = state => state.answersPage.isLoading;\nexport const selectIsQuestions = state => state.questionsPage.isQuestions;\nexport const selectQuestion = state => state.answersPage.question;\n","import * as actionTypes from \"./XxxAnswersPageActionTypes\";\n\nexport const getAnswersFromUrl = url => {\n  return async dispatch => {\n    let response = null;\n    try {\n      dispatch(fetchAnswers());\n      response = await fetch(url);\n      if (response.ok) {\n        response = await response.json();\n        dispatch(fetchAnswersSuccess(response));\n      } else {\n        dispatch(fetchAnswersFailure());\n      }\n    } catch (e) {\n      dispatch(fetchAnswersFailure());\n    }\n    return response;\n  };\n};\n\nexport const fetchAnswers = () => ({\n  type: actionTypes.FETCH_ANSWERS\n});\n\nexport const fetchAnswersFailure = () => ({\n  type: actionTypes.FETCH_ANSWERS_FAILURE\n});\n\nexport const fetchAnswersSuccess = data => ({\n  type: actionTypes.FETCH_ANSWERS_SUCCESS,\n  payload: { data }\n});\n\nexport const getQuestionFromUrl = url => {\n  let response = null;\n  return async dispatch => {\n    try {\n      dispatch(fetchQuestion());\n      let response = await fetch(url);\n      if (response.ok) {\n        response = await response.json();\n        dispatch(fetchQuestionSuccess(response));\n      } else {\n        dispatch(fetchQuestionFailure());\n      }\n    } catch {\n      dispatch(fetchQuestionFailure());\n    }\n    return response;\n  };\n};\n\nexport const fetchQuestion = () => ({\n  type: actionTypes.FETCH_QUESTION\n});\n\nexport const fetchQuestionFailure = () => ({\n  type: actionTypes.FETCH_QUESTION_FAILURE\n});\n\nexport const fetchQuestionSuccess = data => ({\n  type: actionTypes.FETCH_QUESTION_SUCCESS,\n  payload: { data }\n});\n","export const FETCH_ANSWERS = \"FETCH_ANSWERS\";\nexport const FETCH_ANSWERS_FAILURE = \"FETCH_ANSWERS_FAILURE\";\nexport const FETCH_ANSWERS_SUCCESS = \"FETCH_ANSWERS_SUCCESS\";\nexport const FETCH_QUESTION = \"FETCH_QUESTION\";\nexport const FETCH_QUESTION_FAILURE = \"FETCH_QUESTION_FAILURE\";\nexport const FETCH_QUESTION_SUCCESS = \"FETCH_QUESTION_SUCCESS\";\n","import React, { Component } from \"react\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\n\nimport {\n  selectAnswers,\n  selectIsEmpty,\n  selectIsError,\n  selectIsLoading,\n  selectIsQuestions,\n  selectQuestion\n} from \"./XxxAnswersPageReducer\";\nimport {\n  getAnswersFromUrl,\n  getQuestionFromUrl\n} from \"../XxxAnswersPage/XxxAnswersPageActions\";\nimport styles from \"./XxxAnswersPage.module.scss\";\nimport sharedStyles from \"../../assets/styles/XxxSharedStyles.module.scss\";\n\nclass XxxAnswersPage extends Component {\n  // BEST PRACTICE: declare all private properties at the top\n  questionId = \"\";\n  requestUrl = \"\";\n  requestParams = \"\";\n\n  componentDidMount() {\n    this.getQuestionId();\n    this.getQuestion();\n  }\n\n  componentWillMount() {\n    this.unlisten = this.props.history.listen(() => {\n      this.getQuestionId();\n      this.getQuestion();\n    });\n  }\n\n  componentWillUnmount() {\n    this.unlisten();\n  }\n\n  getQuestionId() {\n    this.questionId = this.props.match.params.id;\n  }\n\n  async getQuestion() {\n    this.setState({\n      isEmpty: false,\n      isError: false,\n      isLoading: true\n    });\n    this.setState({ isError: false, isLoading: true });\n    this.requestUrl =\n      \"https://api.stackexchange.com/2.2/questions/\" + this.questionId;\n    this.requestParams = {\n      key: \"U4DMV*8nvpm3EOpvf69Rxw((\",\n      site: \"stackoverflow\",\n      filter: \"withbody\",\n      order: \"desc\",\n      sort: \"votes\"\n    };\n    const url = this.requestUrl + \"?\" + this.getQueryString(this.requestParams);\n    await this.props.getQuestionFromUrl(url);\n    this.getAnswers();\n  }\n\n  getAnswers() {\n    this.requestUrl += \"/answers\";\n    const url = this.requestUrl + \"?\" + this.getQueryString(this.requestParams);\n    this.props.getAnswersFromUrl(url);\n  }\n\n  getQueryString(params) {\n    return Object.keys(params)\n      .map(\n        key => encodeURIComponent(key) + \"=\" + encodeURIComponent(params[key])\n      )\n      .join(\"&\");\n  }\n\n  decodeHtmlEntities(text) {\n    if (text === undefined || text === \"\") {\n      return \"\";\n    }\n    var doc = new DOMParser().parseFromString(text, \"text/html\");\n    var newText = doc.documentElement.textContent;\n    newText = newText.replace(\"&quot;\", '\"');\n    return newText;\n  }\n\n  timeToShortDate(time) {\n    const date = new Date(time);\n    const options = {\n      year: \"numeric\",\n      month: \"numeric\",\n      day: \"numeric\"\n    };\n    return date.toLocaleDateString(\"en\", options);\n  }\n\n  render() {\n    let pageView = null;\n    if (this.props.isLoading) {\n      pageView = (\n        <div className={sharedStyles.pageMessageContainer}>\n          <CircularProgress />\n        </div>\n      );\n    }\n    if (this.props.isError) {\n      pageView = (\n        <div className={sharedStyles.pageMessageContainer}>\n          <div className={sharedStyles.pageMessageError}>\n            Error Occurred Getting Answers\n          </div>\n        </div>\n      );\n    }\n    if (this.props.isEmpty) {\n      pageView = (\n        <div className={sharedStyles.pageMessageContainer}>\n          <div className={sharedStyles.pageMessageWarning}>\n            No Questions Found\n          </div>\n        </div>\n      );\n    }\n    if (!(this.props.isEmpty || this.props.isError || this.props.isLoading)) {\n      pageView = (\n        <div className={styles.answersContainer}>\n          {/*<div className=\"backToQuestions\">*/}\n          {/*  <a href=\"#\">Back to Questions</a>*/}\n          {/*</div>*/}\n          <div className={styles.answerQuestionContainer}>\n            <div className={styles.questionTitle}>\n              {this.decodeHtmlEntities(this.props.question.title)}\n            </div>\n            <div>\n              <span className={styles.questionCaption}>Number of Views: </span>\n              <span className={styles.questionInfo}>\n                {this.props.question.view_count}\n              </span>\n            </div>\n            <div>\n              <span className={styles.questionCaption}>Score: </span>\n              <span className={styles.questionInfo}>\n                {this.props.question.score}\n              </span>\n            </div>\n            <div>\n              <span className={styles.questionCaption}>Tags: </span>\n              <span className={styles.questionInfo}>\n                {this.props.question.tags.join()}\n              </span>\n            </div>\n            <div>\n              <span className={styles.questionCaption}>Asked: </span>\n              <span className={styles.questionInfo}>\n                {this.timeToShortDate(this.props.question.creation_date)}\n              </span>\n            </div>\n            <div\n              className={styles.questionBody}\n              dangerouslySetInnerHTML={{ __html: this.props.question.body }}\n            ></div>\n          </div>\n          {this.props.answers.map(item => (\n            <div\n              className={\n                item.is_accepted\n                  ? styles.answerAccepted\n                  : styles.answerNotAccepted\n              }\n              key={item.answer_id}\n            >\n              <div>\n                <span className={styles.answerCaption}>Score: </span>\n                <span className={styles.answerInfo}>{item.score}</span>\n              </div>\n              <div>\n                <span className={styles.answerCaption}>Answered: </span>\n                <span className={styles.answerInfo}>\n                  {this.timeToShortDate(item.creation_date)}\n                </span>\n              </div>\n              <div className={styles.answerCaption}>Answer:</div>\n              <div\n                className={styles.answerBody}\n                dangerouslySetInnerHTML={{ __html: item.body }}\n              ></div>\n            </div>\n          ))}\n        </div>\n      );\n    }\n    return (\n      <div className={sharedStyles.page}>\n        <div className={sharedStyles.pageTitle}>Stack Exchange Answers</div>\n        <div className={sharedStyles.mainCard}>{pageView}</div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  getQuestionFromUrl,\n  getAnswersFromUrl\n};\n\nconst mapStateToProps = state => ({\n  answers: selectAnswers(state),\n  isEmpty: selectIsEmpty(state),\n  isError: selectIsError(state),\n  isLoading: selectIsLoading(state),\n  isQuestions: selectIsQuestions(state),\n  question: selectQuestion(state)\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(XxxAnswersPage);\n","import * as actionType from \"./XxxSearchBoxActionTypes\";\n\nconst initialState = {\n  isSearchDisabled: true,\n  previousSearchText: null,\n  searchText: \"\"\n};\n\nconst searchBoxReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionType.SET_IS_SEARCH_DISABLED:\n      return { ...state, isSearchDisabled: action.payload };\n    case actionType.SET_PREVIOUS_SEARCH_TEXT:\n      return { ...state, previousSearchText: action.payload };\n    case actionType.SET_SEARCH_TEXT:\n      return { ...state, searchText: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport { searchBoxReducer };\n\n// Selectors\nexport const selectIsSearchDisabled = state => state.searchBox.isSearchDisabled;\nexport const selectPreviousSearchText = state =>\n  state.searchBox.previousSearchText;\nexport const selectSearchText = state => state.searchBox.searchText;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { IconButton } from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { withRouter } from \"react-router-dom\";\n\nimport {\n  selectIsSearchDisabled,\n  selectPreviousSearchText,\n  selectSearchText\n} from \"./XxxSearchBoxReducer\";\nimport styles from \"./XxxSearchBox.module.scss\";\nimport {\n  setIsSearchDisabled,\n  setPreviousSearchText,\n  setSearchText\n} from \"./xxxSearchBoxActions\";\n\nclass XxxSearchBox extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.props.setSearchText(event.target.value);\n    setTimeout(() => {\n      this.props.setIsSearchDisabled(\n        this.props.searchText.length === 0 ||\n          this.props.searchText === this.props.previousSearchText\n      );\n    }, 0);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    if (this.props.isSearchDisabled) {\n      return;\n    }\n    this.props.setPreviousSearchText(this.props.searchText);\n    this.props.setIsSearchDisabled(true);\n    this.props.history.push({\n      pathname: \"/questions\",\n      search: \"?title=\" + encodeURIComponent(this.props.searchText)\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <form className={styles.searchBox} onSubmit={this.handleSubmit}>\n          <input\n            autoFocus\n            type=\"search\"\n            value={this.props.searchText}\n            onChange={this.handleChange}\n          />\n          <IconButton\n            aria-label=\"search\"\n            disabled={this.props.isSearchDisabled}\n            color=\"primary\"\n            href=\"#\"\n            onClick={this.handleSubmit}\n          >\n            <SearchIcon />\n          </IconButton>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  setIsSearchDisabled,\n  setPreviousSearchText,\n  setSearchText\n};\n\nconst mapStateToProps = state => ({\n  isSearchDisabled: selectIsSearchDisabled(state),\n  previousSearchText: selectPreviousSearchText(state),\n  searchText: selectSearchText(state)\n});\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(XxxSearchBox)\n);\n","import * as actionType from \"./XxxSearchBoxActionTypes\";\n\nexport const setIsSearchDisabled = data => ({\n  type: actionType.SET_IS_SEARCH_DISABLED,\n  payload: data\n});\n\nexport const setPreviousSearchText = data => ({\n  type: actionType.SET_PREVIOUS_SEARCH_TEXT,\n  payload: data\n});\n\nexport const setSearchText = data => ({\n  type: actionType.SET_SEARCH_TEXT,\n  payload: data\n});\n","export const GET_IS_SEARCH_DISABLED = \"GET_IS_SEARCH_DISABLED\";\nexport const GET_PREVIOUS_SEARCH_TEXT = \"GET_PREVIOUS_SEARCH_TEXT\";\nexport const GET_SEARCH_TEXT = \"GET_SEARCH_TEXT\";\nexport const SET_IS_SEARCH_DISABLED = \"SET_IS_SEARCH_DISABLED\";\nexport const SET_PREVIOUS_SEARCH_TEXT = \"SET_PREVIOUS_SEARCH_TEXT\";\nexport const SET_SEARCH_TEXT = \"SET_SEARCH_TEXT\";\n","import React, { Component } from \"react\";\n\nimport reduxLogoWhite from \"../../assets/images/redux-logo-white.svg\";\nimport styles from \"./XxxHeader.module.scss\";\nimport XxxSearchBox from \"../XxxSearchBox/XxxSearchBox\";\n\nclass XxxHeader extends Component {\n  render() {\n    return (\n      <div className={styles.header}>\n        <img src={reduxLogoWhite} className={styles.logo} alt=\"logo\" />\n        <div className={styles.headerTitle}>React Redux Example</div>\n        <div className={styles.searchBoxContainer}>\n          <XxxSearchBox />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default XxxHeader;\n","import React, { Component } from \"react\";\nimport sharedStyles from \"../../assets/styles/XxxSharedStyles.module.scss\";\n\nclass XxxHomePage extends Component {\n  render() {\n    return (\n      <div className={sharedStyles.page}>\n        <div className={sharedStyles.pageTitle}>Stack Exchange Search</div>\n        <div className={sharedStyles.mainCard}>\n          <p>This will search Stack Exchange questions for given title text.</p>\n          <p>\n            Enter your search text and click the icon or press the Enter key. A\n            list of matching questions will be shown.\n          </p>\n          <p>After that, you can click on a question to see the answers.</p>\n          <p>\n            Full source available at{\" \"}\n            <a href=\"https://github.com/reactjsexample/react-redux-example\">\n              https://github.com/reactjsexample/react-redux-example\n            </a>\n          </p>\n          <h3>Written in React 16.9.0</h3>\n          <h4>By JC Lango</h4>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default XxxHomePage;\n","import React, {Component} from 'react';\nimport sharedStyles from '../../assets/styles/XxxSharedStyles.module.scss';\n\nclass XxxPageNotFoundPage extends Component {\n  render() {\n    return (\n        <div className={sharedStyles.page}>\n          <div className={sharedStyles.pageTitle}>Page Not Found</div>\n          <div className={sharedStyles.mainCard}>\n            <p>The requested page at this address is not found. <a href=\"/\">Home Page</a></p>\n          </div>\n        </div>\n    );\n  }\n}\n\nexport default XxxPageNotFoundPage;\n","import * as actionType from \"./XxxQuestionsPageActionTypes\";\n\nconst initialState = {\n  currentPage: \"\",\n  isEmpty: false,\n  isError: false,\n  isLoading: true,\n  isMore: false,\n  isQuestions: false,\n  questions: []\n};\n\nconst questionsPageReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionType.FETCH_QUESTIONS:\n      return {\n        ...state,\n        isEmpty: false,\n        isError: false,\n        isLoading: true,\n        isMore: false,\n        isQuestions: false,\n        questions: []\n      };\n    case actionType.FETCH_QUESTIONS_FAILURE:\n      return {\n        ...state,\n        isEmpty: false,\n        isError: true,\n        isLoading: false,\n        isMore: false,\n        isQuestions: false,\n        questions: []\n      };\n    case actionType.FETCH_QUESTIONS_SUCCESS:\n      let isEmpty =\n        !action.payload.data.hasOwnProperty(\"items\") ||\n        !(\n          Array.isArray(action.payload.data.items) &&\n          action.payload.data.items.length > 0\n        );\n      return {\n        ...state,\n        isEmpty: isEmpty,\n        isError: false,\n        isLoading: false,\n        isMore:\n          action.payload.data.hasOwnProperty(\"has_more\") &&\n          action.payload.data.has_more,\n        isQuestions: !isEmpty,\n        questions: !isEmpty ? action.payload.data.items : []\n      };\n    case actionType.SET_CURRENT_PAGE:\n      return { ...state, currentPage: action.payload.data };\n    default:\n      return state;\n  }\n};\n\nexport { questionsPageReducer };\n\nexport const selectCurrentPage = state => state.questionsPage.currentPage;\nexport const selectIsEmpty = state => state.questionsPage.isEmpty;\nexport const selectIsError = state => state.questionsPage.isError;\nexport const selectIsLoading = state => state.questionsPage.isLoading;\nexport const selectIsMore = state => state.questionsPage.isMore;\nexport const selectQuestions = state => state.questionsPage.questions;\n","import * as actionTypes from \"./XxxQuestionsPageActionTypes\";\n\nexport const getQuestionsFromUrl = url => {\n  let response = null;\n  return async dispatch => {\n    try {\n      dispatch(fetchQuestions());\n      let response = await fetch(url);\n      if (response.ok) {\n        response = await response.json();\n        dispatch(fetchQuestionsSuccess(response));\n      } else {\n        dispatch(fetchQuestionsFailure());\n      }\n    } catch {\n      dispatch(fetchQuestionsFailure());\n    }\n    return response;\n  };\n};\n\nexport const fetchQuestions = () => ({\n  type: actionTypes.FETCH_QUESTIONS\n});\n\nexport const fetchQuestionsFailure = data => ({\n  type: actionTypes.FETCH_QUESTIONS_FAILURE\n});\n\nexport const fetchQuestionsSuccess = data => ({\n  type: actionTypes.FETCH_QUESTIONS_SUCCESS,\n  payload: { data }\n});\n\nexport const setCurrentPage = data => ({\n  type: actionTypes.SET_CURRENT_PAGE,\n  payload: { data }\n});\n","export const FETCH_QUESTIONS = \"FETCH_QUESTIONS\";\nexport const FETCH_QUESTIONS_FAILURE = \"FETCH_QUESTIONS_FAILURE\";\nexport const FETCH_QUESTIONS_SUCCESS = \"FETCH_QUESTIONS_SUCCESS\";\nexport const SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\n","import React, { Component } from \"react\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport { CircularProgress, IconButton } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\nimport queryString from \"query-string\";\nimport { withRouter } from \"react-router-dom\";\n\nimport {\n  selectCurrentPage,\n  selectIsEmpty,\n  selectIsError,\n  selectIsLoading,\n  selectIsMore,\n  selectQuestions\n} from \"./XxxQuestionsPageReducer\";\nimport { getQuestionsFromUrl, setCurrentPage } from \"./XxxQuestionsPageActions\";\nimport sharedStyles from \"../../assets/styles/XxxSharedStyles.module.scss\";\nimport styles from \"./XxxQuestionsPage.module.scss\";\n\nclass XxxQuestionsPage extends Component {\n  pageBaseUrl = \"/questions\";\n  requestedPage = \"\";\n  title = \"\";\n\n  constructor(props) {\n    super(props);\n    this.handleFirstPage = this.handleFirstPage.bind(this);\n    this.handleNextPage = this.handleNextPage.bind(this);\n    this.handlePreviousPage = this.handlePreviousPage.bind(this);\n  }\n\n  componentDidMount() {\n    this.readUrlQueryString(this.props.location.search);\n    this.getQuestions();\n  }\n\n  componentWillMount() {\n    this.unlisten = this.props.history.listen(location => {\n      this.readUrlQueryString(location.search);\n      this.getQuestions();\n    });\n  }\n\n  readUrlQueryString(search) {\n    const values = queryString.parse(search);\n    this.title = values.title;\n    this.requestedPage = values.page;\n  }\n\n  componentWillUnmount() {\n    this.unlisten();\n  }\n\n  getQuestions() {\n    const baseUrl = \"https://api.stackexchange.com/2.2/search/advanced\";\n    const requestParams = {\n      key: \"U4DMV*8nvpm3EOpvf69Rxw((\",\n      title: this.title || \"\",\n      answers: \"1\",\n      site: \"stackoverflow\",\n      filter: \"withbody\",\n      page: this.requestedPage || \"1\",\n      order: \"desc\",\n      sort: \"votes\"\n    };\n    const url = baseUrl + \"?\" + this.getQueryString(requestParams);\n    this.props.setCurrentPage(requestParams.page);\n    this.props.getQuestionsFromUrl(url);\n  }\n\n  getQueryString(params) {\n    return Object.keys(params)\n      .map(\n        key => encodeURIComponent(key) + \"=\" + encodeURIComponent(params[key])\n      )\n      .join(\"&\");\n  }\n\n  decodeHtmlEntities(text) {\n    if (text === undefined || text === \"\") {\n      return \"\";\n    }\n    var doc = new DOMParser().parseFromString(text, \"text/html\");\n    var newText = doc.documentElement.textContent;\n    newText = newText.replace(\"&quot;\", '\"');\n    return newText;\n  }\n\n  handleFirstPage() {\n    this.requestedPage = \"1\";\n    this.navigateToPage();\n  }\n\n  handleNextPage(event) {\n    this.requestedPage = (parseInt(this.props.currentPage, 10) + 1).toString();\n    this.navigateToPage();\n  }\n\n  handlePreviousPage() {\n    this.requestedPage = (parseInt(this.props.currentPage, 10) - 1).toString();\n    this.navigateToPage();\n  }\n\n  navigateToPage() {\n    const queryParams = {\n      title: this.title,\n      page: this.requestedPage\n    };\n    this.props.history.push(\n      this.pageBaseUrl + \"?\" + this.getQueryString(queryParams)\n    );\n  }\n\n  render() {\n    let pageView = null;\n\n    if (this.props.isLoading) {\n      pageView = (\n        <div className={sharedStyles.pageMessageContainer}>\n          <CircularProgress />\n        </div>\n      );\n    } else {\n      if (this.props.isError) {\n        pageView = (\n          <div className={sharedStyles.pageMessageContainer}>\n            <div className={sharedStyles.pageMessageError}>\n              Error Occurred Getting Questions\n            </div>\n          </div>\n        );\n      } else {\n        if (this.props.isEmpty) {\n          pageView = (\n            <div className={sharedStyles.pageMessageContainer}>\n              <div className={sharedStyles.pageMessageWarning}>\n                No Questions Found\n              </div>\n            </div>\n          );\n        } else if (typeof this.props.questions != \"undefined\") {\n          pageView = (\n            <div>\n              <ul>\n                {this.props.questions.map(item => (\n                  <li key={item.question_id}>\n                    <a\n                      href={\n                        process.env.PUBLIC_URL +\n                        \"/#/answers/\" +\n                        item.question_id\n                      }\n                      className={styles.dummy}\n                      key={item.question_id}\n                    >\n                      {this.decodeHtmlEntities(item.title)}\n                    </a>\n                  </li>\n                ))}\n              </ul>\n              <div className={styles.pageFooter}>\n                <div className={styles.pageNavigationPanel}>\n                  <span>Page {this.props.currentPage}</span>\n                  <IconButton\n                    disabled={this.props.currentPage === \"1\"}\n                    onClick={this.handleFirstPage}\n                    href=\"#\"\n                    title=\"Go to First Page\"\n                  >\n                    <FirstPageIcon />\n                  </IconButton>\n                  <IconButton\n                    disabled={this.props.currentPage === \"1\"}\n                    onClick={this.handlePreviousPage}\n                    href=\"#\"\n                    title=\"Go to Previous Page\"\n                  >\n                    <ChevronLeftIcon />\n                  </IconButton>\n                  <IconButton\n                    disabled={!this.props.isMore}\n                    onClick={this.handleNextPage}\n                    href=\"#\"\n                    title=\"Go to Next Page\"\n                  >\n                    <ChevronRightIcon />\n                  </IconButton>\n                </div>\n              </div>\n            </div>\n          );\n        }\n      }\n    }\n\n    return (\n      <div className={sharedStyles.page}>\n        <div className={sharedStyles.pageTitle}>Stack Exchange Questions</div>\n        <div className={sharedStyles.mainCard}>{pageView}</div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  getQuestionsFromUrl,\n  setCurrentPage\n};\n\nconst mapStateToProps = state => ({\n  currentPage: selectCurrentPage(state),\n  isEmpty: selectIsEmpty(state),\n  isError: selectIsError(state),\n  isLoading: selectIsLoading(state),\n  isMore: selectIsMore(state),\n  questions: selectQuestions(state)\n});\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(XxxQuestionsPage)\n);\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport styles from \"./XxxApp.module.scss\";\nimport XxxAnswersPage from \"../pages/XxxAnswersPage/XxxAnswersPage\";\nimport XxxHeader from \"../components/XxxHeader/XxxHeader\";\nimport XxxHomePage from \"../pages/XxxHomePage/XxxHomePage\";\nimport XxxPageNotFoundPage from \"../pages/XxxPageNotFoundPage/XxxPageNotFoundPage\";\nimport XxxQuestionsPage from \"../pages/XxxQuestionsPage/XxxQuestionsPage\";\n\nfunction XxxApp() {\n  return (\n    <div className={styles.xxxApp}>\n      <Router>\n        <XxxHeader />\n        <div>\n          <Switch>\n            <Route exact path=\"/\" component={XxxHomePage} />\n            <Route path=\"/answers/:id\" component={XxxAnswersPage} />\n            <Route path=\"/questions\" component={XxxQuestionsPage} />\n            <Route component={XxxPageNotFoundPage} />\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default XxxApp;\n","import { combineReducers } from \"redux\";\n\nimport { answersPageReducer as answersPage } from \"../pages/XxxAnswersPage/XxxAnswersPageReducer\";\nimport { questionsPageReducer as questionsPage } from \"../pages/XxxQuestionsPage/XxxQuestionsPageReducer\";\nimport { searchBoxReducer as searchBox } from \"../components/XxxSearchBox/XxxSearchBoxReducer\";\n\nconst xxxAppReducer = combineReducers({\n  answersPage,\n  questionsPage,\n  searchBox\n});\n\nexport default xxxAppReducer;\n","import { applyMiddleware, createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\n\nimport xxxAppReducer from \"./xxxAppReducer\";\n\nconst xxxAppStore = createStore(\n  xxxAppReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nexport default xxxAppStore;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport XxxApp from \"./XxxApp/XxxApp\";\nimport xxxAppStore from \"./XxxApp/xxxAppStore\";\nimport \"./index.scss\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <Provider store={xxxAppStore}>\n    <XxxApp />\n  </Provider>,\n  rootElement\n);\n"],"sourceRoot":""}